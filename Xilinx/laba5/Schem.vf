////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Schem.vf
// /___/   /\     Timestamp : 05/21/2020 10:01:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family virtex5 -verilog D:/Xilinx/laba5/Schem.vf -w D:/Xilinx/laba5/Schem.sch
//Design Name: Schem
//Device: virtex5
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Schem(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module Schem(C, 
             CLR, 
             X1, 
             X2, 
             Q1, 
             Q2, 
             Y1, 
             Y2, 
             Y3);

    input C;
    input CLR;
    input X1;
    input X2;
   output Q1;
   output Q2;
   output Y1;
   output Y2;
   output Y3;
   
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_90;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_93;
   wire XLXN_160;
   wire XLXN_161;
   wire XLXN_162;
   wire XLXN_175;
   wire XLXN_176;
   wire XLXN_241;
   wire XLXN_242;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_Schem #( .INIT(1'b0) ) XLXI_1 (.C(C), 
                              .CLR(CLR), 
                              .J(XLXN_175), 
                              .K(XLXN_176), 
                              .Q(Q1_DUMMY));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_Schem #( .INIT(1'b0) ) XLXI_2 (.C(C), 
                              .CLR(CLR), 
                              .J(XLXN_242), 
                              .K(XLXN_241), 
                              .Q(Q2_DUMMY));
   AND3B3  XLXI_5 (.I0(X2), 
                  .I1(X1), 
                  .I2(Q1_DUMMY), 
                  .O(XLXN_15));
   AND3B3  XLXI_7 (.I0(Q2_DUMMY), 
                  .I1(X1), 
                  .I2(Q1_DUMMY), 
                  .O(XLXN_16));
   OR2  XLXI_8 (.I0(XLXN_16), 
               .I1(XLXN_15), 
               .O(XLXN_175));
   AND3B1  XLXI_10 (.I0(X1), 
                   .I1(X2), 
                   .I2(Q1_DUMMY), 
                   .O(XLXN_24));
   OR2  XLXI_11 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .O(XLXN_176));
   AND3B3  XLXI_12 (.I0(Q2_DUMMY), 
                   .I1(X2), 
                   .I2(X1), 
                   .O(XLXN_53));
   AND3B2  XLXI_20 (.I0(Q2_DUMMY), 
                   .I1(X1), 
                   .I2(Q1_DUMMY), 
                   .O(XLXN_51));
   AND4B2  XLXI_21 (.I0(Q2_DUMMY), 
                   .I1(Q1_DUMMY), 
                   .I2(X2), 
                   .I3(X1), 
                   .O(XLXN_52));
   OR3  XLXI_22 (.I0(XLXN_52), 
                .I1(XLXN_51), 
                .I2(XLXN_53), 
                .O(XLXN_242));
   AND3B2  XLXI_23 (.I0(X2), 
                   .I1(X1), 
                   .I2(Q2_DUMMY), 
                   .O(XLXN_60));
   AND3B2  XLXI_24 (.I0(Q1_DUMMY), 
                   .I1(X1), 
                   .I2(Q2_DUMMY), 
                   .O(XLXN_59));
   OR2  XLXI_25 (.I0(XLXN_59), 
                .I1(XLXN_60), 
                .O(XLXN_241));
   AND4B3  XLXI_26 (.I0(Q2_DUMMY), 
                   .I1(X2), 
                   .I2(X1), 
                   .I3(Q1_DUMMY), 
                   .O(XLXN_73));
   AND4B3  XLXI_27 (.I0(Q2_DUMMY), 
                   .I1(Q1_DUMMY), 
                   .I2(X1), 
                   .I3(X2), 
                   .O(XLXN_71));
   AND4B1  XLXI_28 (.I0(X1), 
                   .I1(Q1_DUMMY), 
                   .I2(Q2_DUMMY), 
                   .I3(X2), 
                   .O(XLXN_72));
   OR3  XLXI_29 (.I0(XLXN_72), 
                .I1(XLXN_71), 
                .I2(XLXN_73), 
                .O(Y1));
   AND2B2  XLXI_30 (.I0(X2), 
                   .I1(X1), 
                   .O(XLXN_90));
   AND3B2  XLXI_32 (.I0(Q2_DUMMY), 
                   .I1(Q1_DUMMY), 
                   .I2(X2), 
                   .O(XLXN_92));
   AND3B1  XLXI_33 (.I0(Q2_DUMMY), 
                   .I1(X2), 
                   .I2(X1), 
                   .O(XLXN_93));
   OR4  XLXI_38 (.I0(XLXN_93), 
                .I1(XLXN_92), 
                .I2(XLXN_91), 
                .I3(XLXN_90), 
                .O(Y2));
   OR3  XLXI_87 (.I0(XLXN_160), 
                .I1(XLXN_161), 
                .I2(XLXN_162), 
                .O(Y3));
   AND4B4  XLXI_88 (.I0(Q2_DUMMY), 
                   .I1(Q1_DUMMY), 
                   .I2(X2), 
                   .I3(X1), 
                   .O(XLXN_162));
   AND4B2  XLXI_89 (.I0(Q2_DUMMY), 
                   .I1(X1), 
                   .I2(X2), 
                   .I3(Q1_DUMMY), 
                   .O(XLXN_161));
   AND3  XLXI_90 (.I0(Q2_DUMMY), 
                 .I1(X2), 
                 .I2(X1), 
                 .O(XLXN_160));
   AND3B1  XLXI_93 (.I0(X1), 
                   .I1(Q1_DUMMY), 
                   .I2(Q2_DUMMY), 
                   .O(XLXN_23));
   AND3B1  XLXI_94 (.I0(X1), 
                   .I1(Q1_DUMMY), 
                   .I2(Q2_DUMMY), 
                   .O(XLXN_91));
endmodule
